plugins {
    id 'dev.architectury.loom' version '1.7-SNAPSHOT' apply false
    id "architectury-plugin" version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id 'java'
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

def vendor = compileJava.javaCompiler.get().metadata.vendor
def jbr = (vendor == "JetBrains")
println "jvm_vendor: '$vendor' ${jbr ? "(JBR features ENABLED)" : ""}"

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
//    apply plugin: 'maven-publish'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    loom {
        silentMojangMappingsLicense()

        runs {
            configureEach {
                vmArg "-Dmixin.debug.export=true"
                if (jbr) {
                    vmArg "-XX:+AllowEnhancedClassRedefinition"
                }
            }
        }

    }
    repositories {
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url "https://maven.shedaniel.me/" }
    }
    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"

        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:${parchment_version}")
        }
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }
}